summary(modelo4)
modelo5 <- lm(confianza_gobierno ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo5)
modelo6 <- lm(confianza_judicial ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo6)
sjPlot::tab_model(list(modelo1, modelo2, modelo3, modelo4, modelo5, modelo6),
show.ci = FALSE,
p.style = "stars",
title = "Modelos de regresion lineal multiple",
digits = 3,
encoding = "UTF-8")
sjPlot::tab_model(list(modelo1, modelo2, modelo3, modelo4, modelo5, modelo6),
show.ci = FALSE,
collapse.ci = T,
p.style = "stars",
title = "Modelos de regresion lineal multiple",
digits = 3,
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
datos <- select(datos_2020, P13STGBS_A, P13STGBS_B, p13st_c, p13st_d, p13st_e, p13st_f, edad, sexo, p18st, wt, s1)
View(datos)
datos <- select(datos_2020, P13STGBS_B, p13st_c, p13st_d, p13st_e, edad, sexo, wt, s1)
# 5. Cambio de nombre de variables a utilizar
datos_proc <- datos_2020 %>%
dplyr::select(confianza_policia=P13STGBS_B,
confianza_iglesia=p13st_c,
confianza_congreso=p13st_d,
confianza_gobierno=p13st_e,
Clase_social=s1,
Ponderador=wt,
edad, sexo)
pacman::p_load(tidyverse, #Universo de paquetes
sjmisc, #Para explorar datos
dplyr, #Para manipular datos
haven, #cargar y exportar bases de datos en formatos .sav y .dta
car) #Para recodificar manteniendo las etiquetas
datos_2020 <- read_rds("input/data/Latinobarometro_2020.rds")
datos <- select(datos_2020, P13STGBS_B, p13st_c, p13st_d, p13st_e, edad, sexo, wt, s1)
# 5. Cambio de nombre de variables a utilizar
datos_proc <- datos_2020 %>%
dplyr::select(confianza_policia=P13STGBS_B,
confianza_iglesia=p13st_c,
confianza_congreso=p13st_d,
confianza_gobierno=p13st_e,
Clase_social=s1,
Ponderador=wt,
edad, sexo)
datos_proc%>%
mutate_at(vars(sexo, confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno,
Clase_social), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(Clase_social = car::recode(.$Clase_social, recodes =c("1 = 'Alta'; 2 = 'Media Alta'; 3 = 'Media';
4 = 'Media Baja'; 5 = 'Baja'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
datos_proc <- datos_proc%>%
mutate_at(vars(sexo, confianza_fuerzas , confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno,
confianza_judicial ), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia.rc = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia.rc = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso.rc = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno.rc = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(Clase_social = car::recode(.$Clase_social, recodes =c("1 = 'Alta'; 2 = 'Media Alta'; 3 = 'Media';
4 = 'Media Baja'; 5 = 'Baja'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
datos_proc <- datos_proc%>%
mutate_at(vars(sexo,  confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia.rc = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia.rc = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso.rc = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno.rc = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(Clase_social = car::recode(.$Clase_social, recodes =c("1 = 'Alta'; 2 = 'Media Alta'; 3 = 'Media';
4 = 'Media Baja'; 5 = 'Baja'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
datos_proc <- datos_proc %>%
mutate_at(vars( confianza_policia ,confianza_iglesia, confianza_congreso,
confianza_gobierno, Clase_social, sexo), ~(as.numeric(.)))
datos_proc <- datos_proc %>%
mutate_at(vars( confianza_policia ,confianza_iglesia, confianza_congreso,
confianza_gobierno, sexo), ~(as.numeric(.)))
# 7. Exportar datos
saveRDS(datos_proc, file = "output/data/datos_proc.rds")
pacman::p_load(sjPlot,
tidyverse,
srvyr,
survey,
magrittr)
datos_proc <- readRDS(file= "../output/data/datos_proc.rds")
sjPlot::view_df(datos_proc,
encoding = "UTF-8")
datos_proc%>%
mutate_at(vars(sexo, confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno,
Clase_social), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(Clase_social = car::recode(.$Clase_social, recodes =c("1 = 'Alta'; 2 = 'Media Alta'; 3 = 'Media';
4 = 'Media Baja'; 5 = 'Baja'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
datos_proc%>%
mutate_at(vars(sexo, confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(Clase_social = car::recode(.$Clase_social, recodes =c("1 = 'Alta'; 2 = 'Media Alta'; 3 = 'Media';
4 = 'Media Baja'; 5 = 'Baja'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
datos_proc <- datos_proc %>%
mutate_at(vars( confianza_policia ,confianza_iglesia, confianza_congreso,
confianza_gobierno, sexo), ~(as.numeric(.)))
sjPlot::view_df(datos_proc,
encoding = "UTF-8")
datos_proc%>%
plot_scatter(., confianza_policia, edad,
title="Asociación de variables percepcion de riesgo y cuidarse",
fit.grps = "lm", grid = TRUE)
datos_proc%>%
plot_scatter(., confianza_policia, sexo,
title="Asociación de variables percepcion de riesgo y cuidarse",
fit.grps = "lm", grid = TRUE)
datos_proc %>%
select( confianza_policia,  sexo) %>%
tab_corr(.,
triangle = "lower",
title = "Tabla de correlación",
encoding = "UTF-8")
modelo1 <- lm(confianza_policia ~  sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo1)
modelo2 <- lm(confianza_iglesia ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo2)
modelo3 <- lm(confianza_congreso ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo3)
modelo4 <- lm(confianza_gobierno ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo4)
sjPlot::tab_model(list(modelo1, modelo2, modelo3, modelo4),
show.ci = FALSE,
collapse.ci = T,
p.style = "stars",
title = "Modelos de regresion lineal multiple",
digits = 3,
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
sjPlot::tab_model(list(modelo1,modelo2,modelo3,modelo4),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo 1", "Modelo 2","Modelo 3","Modelo 4"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
modelo_completo <- lm(confianza_policia ~ confianza_iglesia ~ confianza_congreso  confianza_gobierno+ sexo + edad  data = datos_proc, weights = Ponderador)
modelo_ponderador <- lm(confianza_policia ~ confianza_iglesia ~ confianza_congreso  confianza_gobierno+ sexo + edad, data = datos_proc, weights = Ponderador)
modelo_ponderador <- lm(confianza_policia ~ confianza_iglesia ~ confianza_congreso ~ confianza_gobierno + sexo + edad, data = datos_proc, weights = Ponderador)
modelo_ponderador <- lm(confianza_policia ~ confianza_iglesia + confianza_congreso + confianza_gobierno + sexo + edad, data = datos_proc, weights = Ponderador)
summary(modelo_completo) #Revisamos los valores del modelo
summary(modelo_ponderador) #Revisamos los valores del modelo
modelo_survey <- svyglm(confianza_policia ~ confianza_iglesia + confianza_congreso + confianza_gobierno + sexo + edad, data = datos_proc family = gaussian(link = "identity"), design = obj_enc)
modelo_survey <- svyglm(confianza_policia ~ confianza_iglesia + confianza_congreso + confianza_gobierno + sexo + edad, family = gaussian(link = "identity"), design = obj_enc)
modelo0 <- lm(confianza_policia ~ confianza_iglesia + confianza_congreso + confianza_gobierno + sexo + edad, data = datos_proc)
sjPlot::tab_model(list(modelo_Ponderador,modelo0),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo con pesos muestrales", "Modelo sin pesos muestrales"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
sjPlot::tab_model(list(modelo_ponderador,modelo0),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo con pesos muestrales", "Modelo sin pesos muestrales"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
plot_model(modelo_0, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "yellow",
title = "Modelo de regresión lineal para Modelo Completo con diseño muestral")
plot_model(modelo_ponderador, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "purple",
title = "Modelo de regresión lineal para Modelo Completo")
plot_model(modelo0, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "yellow",
title = "Modelo de regresión lineal para Modelo Completo con diseño muestral")
datos_proc %>%
select( confianza_policia,  sexo) %>%
tab_corr(.,
triangle = "lower",
title = "Tabla de correlación",
encoding = "UTF-8")
datos_proc %>%
select( confianza_policia,  edad) %>%
tab_corr(.,
triangle = "lower",
title = "Tabla de correlación",
encoding = "UTF-8")
datos_proc %>%
select( confianza_policia,  sexo) %>%
tab_corr(.,
triangle = "lower",
title = "Tabla de correlación",
encoding = "UTF-8")
modelo2$coefficients[2]
modelo2$coefficients[4]
modelo2$coefficients[3]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[2]
modelo1$coefficients[4]
modelo1$coefficients[4]
modelo1$coefficients[3]
modelo1$coefficients[3]
modelo1$coefficients[3]
modelo1$coefficients[3]
modelo2$coefficients[2]
modelo2$coefficients[4]
modelo2$coefficients[3]
modelo3$coefficients[2]
modelo3$coefficients[4]
modelo3$coefficients[3]
modelo4$coefficients[2]
modelo4$coefficients[4]
modelo4$coefficients[3]
sjPlot::tab_model(list(modelo_ponderador,modelo0),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo con pesos muestrales", "Modelo sin pesos muestrales"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
plot_model(modelo0, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "yellow",
title = "Modelo de regresión lineal simple para Modelo 0 sin peso muestral")
sjPlot::tab_model(list(modelo_ponderador,modelo0),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo con pesos muestrales", "Modelo sin pesos muestrales"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
sjPlot::tab_model(list(modelo1, modelo2, modelo3, modelo4),
show.ci = FALSE,
collapse.ci = T,
p.style = "stars",
title = "Modelos de regresion lineal multiple",
digits = 3,
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
sjPlot::tab_model(list(modelo1,modelo2,modelo3,modelo4),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo 1", "Modelo 2","Modelo 3","Modelo 4"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
pacman::p_load(tidyverse, #Universo de paquetes
sjmisc, #Para explorar datos
dplyr, #Para manipular datos
haven, #cargar y exportar bases de datos en formatos .sav y .dta
car) #Para recodificar manteniendo las etiquetas
datos_2020 <- read_rds("input/data/Latinobarometro_2020.rds")
datos_1999 <- read_rds("input/data/Latinobarometro_2020.rds")
datos_2020 <- read_rds("input/data/Latinobarometro_2020.rds")
# 3. Explorar datos
View(datos_2020)
head(datos_2020)
datos <- select(datos_2020, P13STGBS_B, p13st_c, p13st_d, p13st_e, edad, sexo, wt, s1)
view(datos)
# 5. Cambio de nombre de variables a utilizar
datos_proc <- datos_2020 %>%
dplyr::select(confianza_policia=P13STGBS_B,
confianza_iglesia=p13st_c,
confianza_congreso=p13st_d,
confianza_gobierno=p13st_e,
Clase_social=s1,
Ponderador=wt,
edad, sexo)
view(datos_proc)
datos_proc%>%
mutate_at(vars(sexo, confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(Clase_social = car::recode(.$Clase_social, recodes =c("1 = 'Alta'; 2 = 'Media Alta'; 3 = 'Media';
4 = 'Media Baja'; 5 = 'Baja'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
datos_proc <- datos_proc%>%
mutate_at(vars(sexo,  confianza_policia, confianza_iglesia, confianza_congreso, confianza_gobierno), ~(as.factor(.))) %>%
mutate(sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'")))%>%
mutate(confianza_policia.rc = car::recode(.$confianza_policia, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_iglesia.rc = car::recode(.$confianza_iglesia, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_congreso.rc = car::recode(.$confianza_congreso, recodes = c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(confianza_gobierno.rc = car::recode(.$confianza_gobierno, recodes =c("1 = 'Mucho'; 2 = 'Algo';
3 = 'Poca'; 4 = 'Ninguna'; c(-1, -2, -3, -4, -5) = NA"))) %>%
mutate(edad = case_when(edad>=18 & edad<=25~"Jovenes",
edad>=26 & edad<=40~"Adultos Jovenes",
edad>=41 & edad<=60~"Adultos",
edad>=60~"Adultos Mayores",
TRUE ~ NA_character_))
# 6.2 Objeto final
datos_proc <- datos_proc %>%
mutate_at(vars( confianza_policia ,confianza_iglesia, confianza_congreso,
confianza_gobierno, sexo), ~(as.numeric(.))) # se tranforma a numeric para poder trabajar mas adelante con estas variables
# 7. Exportar datos
saveRDS(datos_proc, file = "output/data/datos_proc.rds")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(sjPlot,
tidyverse,
srvyr,
survey,
magrittr)
datos_proc <- readRDS(file= "../output/data/datos_proc.rds")
View(datos_proc)
sjPlot::view_df(datos_proc,
encoding = "UTF-8")
modelo1 <- lm(confianza_policia ~  sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo1)
modelo2 <- lm(confianza_iglesia ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo2)
modelo3 <- lm(confianza_congreso ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo3)
modelo4 <- lm(confianza_gobierno ~ sexo + edad,
data = datos_proc,
weights = Ponderador)
summary(modelo4)
View(modelo1)
modelo1$coefficients[2]
modelo1$coefficients[4]
modelo1$coefficients[3]
modelo2$coefficients[2]
sjPlot::tab_model(list(modelo1, modelo2, modelo3, modelo4),
show.ci = FALSE,
collapse.ci = T,
p.style = "stars",
title = "Modelos de regresion lineal multiple",
digits = 3,
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
sjPlot::tab_model(list(modelo1,modelo2,modelo3,modelo4),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo 1", "Modelo 2","Modelo 3","Modelo 4"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
modelo_ponderador <- lm(confianza_policia ~ confianza_iglesia + confianza_congreso + confianza_gobierno + sexo + edad, data = datos_proc, weights = Ponderador)
summary(modelo_ponderador) #Revisamos los valores del modelo
modelo0 <- lm(confianza_policia ~ confianza_iglesia + confianza_congreso + confianza_gobierno + sexo + edad, data = datos_proc)
sjPlot::tab_model(list(modelo_ponderador,modelo0),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo con pesos muestrales", "Modelo sin pesos muestrales"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
plot_model(modelo_ponderador, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "purple",
title = "Modelo de regresión lineal para Modelo Completo")
plot_model(modelo0, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "yellow",
title = "Modelo de regresión lineal simple para Modelo 0 sin peso muestral")
pacman::p_load(haven,
tidyverse,
dplyr,
sjmisc)
datosReyes <- read_sav("input/data/Reyes.sav")
rm(data)
